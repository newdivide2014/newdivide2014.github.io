[{"content":"简单句 what is 简单句 英语必须具备： 主谓结构，且主语一定是谓语动作的发出者，如果有宾语，宾语一定是谓语动作的承受者/对象。\n简单句的分类 主谓 主谓宾 谓语：实意动词\n主谓表 谓语：系统词 系动词：\n be 感官动词：look smell taste sound feel 翻译成变化的词：become get 翻译成保持的词：keep stay remain  主谓双宾 主谓宾宾补 句子的成分（词性的问题） 谓语   谓语的成分 有时态的实意动词或者系动词充当谓语\n  一句话当中的动词能不能多？ 绝对不能，一句话当中只能有一个动词存在并且充当谓语。多余的动词全部都要变成非谓语动词，所以英语中有了独立主格和分词做状语。 谓语只能是动词，动词只能做谓语，所以需要把一句话当中所有不做谓语的动词全部都要变成不是动词的（1,+ing 2, +ed 3, +to do 非谓语动词） 翻译：他拍了拍我的肩膀，一句话都没说就离开了 he beating my shoulder, saying nothing, departed. 翻译：我爱你，你爱我 i loving you , you love me. (独立主格) 翻译：冬天来了，春天就不远了。 winter approaching ,spring will be around the corner. 翻译：我是一个老师，我喜欢唱歌 be a teacher, i enjoy singing.（分词做状语）\n  动词能不能少？ 绝对不能，当一句话当中需要动词而又没有动词的时候，永远都加be动词，且be动词翻译没有意思。\n   *** 谓语的总结：一句话当中，有且只能有一个有时态的实意动词或者是系动词的存在，并且充当谓语。 ***\n  主语  主语的成分 从句that who where when 引导词+句子 做主语的只能四个： 名词，代词，非谓语动词做主语，从句  第二节课 2. 一句话当中的主语能不能少 绝对不能。一句话没有主语怎么办？ 1） 加it做主语 必须和天气,温度,时间有关系，才能+It作为主语 It feels strikingly cold in beijing. 2）必须有\u0026quot;有\u0026quot;这个意思才能用there be句型 There remain/exist/seem 这三个词都翻译成“有” There reamin an ocean of elements being responsible for my perspective. 3）没有主语可以写成被动 Authorities should be proposed to adopt action. Pollution is claimed exceedingly grave by an increasing amount of individuals. 4) x 人称代词，不可以写成被动的用人称代词解决 如果有毅力，就一定会成功。 if there seems persistence, glories cannot fail to be attained.\n宾语  做宾语的只能四个： 名词，代词，非谓语动词，从句  表语  能充当表语的6个： 名词，代词，非谓语动词，从句，形容词，介词短语  简单句的考点分析  写作 1）写作中所有写不来的单词都写成自己会的词汇。 2）写不来的长难句暂时写成简单句 长难句分析 1）分析长难句，先找动词，也就是谓语，从而找到这句话的主谓宾。如果一句话中找到多个动词，只需要找出主句的谓语动词。（前面没有引导词的动词就是主句的谓语动词）  第三节课\n并列句 什么是并列句 用连词连接俩个句子的是并列句\n常见连词 1. 平行关系 and, not only\u0026hellip;but also,\n2. 转折关系 but, yet, while, whereas\n3. 选择关系 or\n4. 递进 then\n5. 因果 for, so,\n考点分析  写作 只要写作上下句有逻辑关系，就一定要用逻辑关系词（连词、介词、介词短语、副词） There exist a train of companies coming from the distance so i become more than delighted. There exist a train of companies coming from the distance, and as a consequence, i become more than delighted. 连词和其他的词的逻辑关系区别在于：连词的前面要么用逗号，要么什么也没有。而其他的逻辑关系词前面，要么用句号，要么加连词and 1)平行关系的副词： equally,likewise, similary, at the same time, in the meanwhile 2)转折关系的副词和介词短语： however, nevertheless, conversely, unexpectedly, on the contrary, by contrast  选择关系的副词和介词短语： alternatively 递进 besides, furthermore, moreover, in addition, subsequently 因果 thus, therefore, as a consequence/result, consequently  I am maintained changeable like water. on the contrary, my clarity keeps consistent. Do you still keep the day in mind? I failed to pass CET4, and consequently, i shed tears alone in the rain. At the same time, you came up to me then beat my shouleder , telling me \u0026ldquo;there exists no destination in life.\u0026rdquo;\n完形填空： 逻辑关系题的做法只需要看逻辑关系词前后两句话的意思就ok了 长难句分析 只要见到有并列连词的出现，通常都会有省略，翻译的时候先把省略的补充上再做翻译。那如何查找省略的内容呢？一句话只要有省略，就一定是省略在连词后而不是连词前。所以连词后面有的成分，连词前面一定有。连词前面有而连词后没有的内容便是省略的成分。  ** 分析长难句第一步找动词（谓语），第二步就是找连词（当连词连接俩个单词的时候装作看不见） 。第三步是看定语， 第四步找状语。\n","permalink":"https://newdivide2014.github.io/zh/posts/english-grammer/","summary":"简单句 what is 简单句 英语必须具备： 主谓结构，且主语一定是谓语动作的发出者，如果有宾语，宾语一定是谓语动作的承受者/对象。 简单句的分类 主谓 主谓宾 谓","title":"英语语法粗记"},{"content":"有道词典，滑词取词功能与QtCreator冲突，取消滑词取词功能，或直接退出有道词典！坑！\n","permalink":"https://newdivide2014.github.io/zh/posts/windows-qtcreator-crush/","summary":"有道词典，滑词取词功能与QtCreator冲突，取消滑词取词功能，或直接退出有道词典！坑！","title":"windows上QtCreator经常未响应崩溃"},{"content":"问题描述 报错信息：SIOCSIFFLAGS: Operation not possible due to RF-kill\n我想让一块无线网卡up起来，结果没想到报错了\n1 2  [root@localhost opt]# ifconfig wls35u1 up SIOCSIFFLAGS: Operation not possible due to RF-kill   查了一下，RF-KILL是一个打开和关闭无线设备的工具。 所以这是一打开无线设备（wifi）的错误。\n解决办法  查看所有无线设备当前状态  1 2 3 4 5 6  [root@localhost opt]# rfkill list all 2: phy2: Wireless LAN Soft blocked: yes Hard blocked: no # 可以看出Hard blocked和 software blocked之间的同步失败   解锁设备  1 2 3 4 5 6 7  # 解锁所有wifi设备 [root@localhost opt]# rfkill unblock all # 再次查看状态 [root@localhost opt]# rfkill list all 2: phy2: Wireless LAN Soft blocked: no Hard blocked: no   此刻，可以使用ifconfig来启动wifi网卡了。\n","permalink":"https://newdivide2014.github.io/zh/posts/operation-not-possible-due-to-rf-kill/","summary":"问题描述 报错信息：SIOCSIFFLAGS: Operation not possible due to RF-kill 我想让一块无线网卡up起来，结果没想到报错了 1 2 [root@localhost opt]# ifconfig wls35u1 up SIOCSIFFLAGS: Operation not possible due to RF-kill 查了一下，R","title":"SIOCSIFFLAGS: Operation Not Possible Due to RF Kill"},{"content":"唉，该说什么好呢。。。wtf\n今天我把自己的戒指弄丢了。。。\n早上上班嫌戒指卡的肉肉疼，就往下扒拉了扒拉，直到中午吃完饭溜达完了， 一屁股做到凳子上，发现手上少点啥。。\n妈蛋的，我戒指呢我戒指呢。。。 搞的我一下午也干不进去活。。 这真是倒霉透了！今天拿到了钥匙终于进了家却把戒指丢了。 我真是服了我自己了。\n烦躁。。都是钱啊。嘤嘤嘤。裂开。落泪。😭😭😭\n去年五一当天发的年终奖，今天只发了工资，我还能说啥。。。\n活干的也不开心，不是搞qt界面就是搞word报告，一点技术含量都没有，待下去真的要费了，可是要找哪家呢也没有想好。唉。。 只能准备跳槽炒了老板。\n","permalink":"https://newdivide2014.github.io/zh/posts/lose-my-ring/","summary":"唉，该说什么好呢。。。wtf 今天我把自己的戒指弄丢了。。。 早上上班嫌戒指卡的肉肉疼，就往下扒拉了扒拉，直到中午吃完饭溜达完了， 一屁股做到凳子","title":"我戒指呢"},{"content":"   管脚 缩写 英文释义 中文释义     1 CD Carrier Detect 载波检测   2　 RXD Receive Data　 接收   3　 TXD　 Transmit Data　 发送   4　 DTR　 Data Terminal Ready 数据终端就绪   5　 GND　 System Ground　 系统接地   6　 DSR　 Data Set Ready 数据设备就绪   7　 RTS　 Clear To Send 允许发送    ","permalink":"https://newdivide2014.github.io/zh/posts/rs232-8pin/","summary":"管脚 缩写 英文释义 中文释义 1 CD Carrier Detect 载波检测 2 RXD Receive Data 接收 3 TXD Transmit Data 发送 4 DTR Data Terminal Ready 数据终端就绪 5 GND System Ground 系统接地 6 DSR Data Set Ready 数据设备就绪 7 RTS Clear To Send 允许发","title":"RS232针脚（8 pin）含义"},{"content":"问题描述 发布的qt程序在多屏幕机器上显示不全。\n反复调试了好久，发现在只有一块显示屏中程序显示正常。但是在同事的外接了一块显示屏下运行程序时，程序总是不在屏幕中间，而是只显示了一半，每次启动程序位置都是有一半不在屏幕内，还需要拖动。对于用户的使用不友好\u0026hellip;\n原始测试代码段：\n1 2 3 4 5 6 7 8  int main(int argc, char *argv[]) { QApplication a(argc, argv); MainWidget w; w.move((a.desktop()-\u0026gt;width()-w.width())/2,((a.desktop()-\u0026gt;height()-w.height())/2)); w.show(); return a.exec(); }    帮助文档内容： However, for desktops with multiple screens, the size of the desktop is the union of all the screen sizes, so width() and height() should not be used for computing the size of a widget to be placed on one of the screens.\n 原来这位置是用像素大小来计算的，单屏幕上也并没有什么问题，但是在多屏下就有问题了，因为多屏下的像素是所有屏幕加起来，所以用上面的方法，程序界面位置是不可预料。\n解决办法 1 2 3 4 5 6 7 8 9 10 11 12 13  int main(int argc, char *argv[]) { QApplication a(argc, argv); MainWidget w; //程序所在的屏幕编号  int currentScreen = a.desktop()-\u0026gt;screenNumber(\u0026amp;w); //程序所在屏幕尺寸  QRect rect = a.desktop()-\u0026gt;screenGeometry(currentScreen); //移动到所在屏幕中间  w.move((rect.width() - w.width()) / 2, (rect.height() - w.height()) / 2); w.show(); return a.exec(); }   ","permalink":"https://newdivide2014.github.io/zh/posts/qt-ui-center-show/","summary":"问题描述 发布的qt程序在多屏幕机器上显示不全。 反复调试了好久，发现在只有一块显示屏中程序显示正常。但是在同事的外接了一块显示屏下运行程序时，","title":"qt程序在多屏下显示不全的问题"},{"content":"将 /etc/ 内的所有档案备份下来，并且保存其权限！\n[root@linux ~]# tar -czvpf /tmp/etc.tar.gz /etc\r 这个-p的属性是很重要的，尤其是当您要保留原本档案的属性时！\n","permalink":"https://newdivide2014.github.io/zh/posts/linux-tar-cmd/","summary":"将 /etc/ 内的所有档案备份下来，并且保存其权限！ [root@linux ~]# tar -czvpf /tmp/etc.tar.gz /etc 这个-p的属性是很重要的，尤其是当您要保留原本档案的属性时！","title":"Linux tar备忘"},{"content":"RS485和RS232 RS232标准诞生于RS485之前，但RS232有几处不足的地方：\n  接口的信号电平值较高，达到时机伏，使用不当容易损坏接口芯片，电平标准也与TTL电平不兼容。\n  传输速率有局限，不可以过高，一般到一两百千比特每秒（Kb/s）就到极限了。\n  接口使用信号线和GND与其他设备形成共地模式的通信，这种共地模式传输容易产生干扰，并且抗干扰能力比较弱。\n  传输距离有限，最多只能通信几十米。\n  通信的时候只能两点之间进行通信，不能够实现多机制联网通信。 针对RS232接口的不足，就不断出现了一些新的接口标准，RS485就是其中之一，它具备以下特点：\n  采用差分信号。差分最大的好处就是可以抑制共模干扰。尤其当工业现场环境比较复杂，干扰比较多是，采用差分方式可以有效的提高通信可靠性。RS485 采用两根通信线，通常用 A 和 B 或者 D+和 D-来表示。逻辑“1”以两线之间的电压差为+(0.2~6)V 表示，逻辑“0”以两线间的电压差为-(0.2~6)V 来表示，是一种典型的差分通信。\n  RS485通信速率快，最大传输速度可达10Mb/s。\n  RS485内部的物理结构，采用的平衡驱动器和差分接收器的组合，抗干扰能力也大大增强。\n  传输距离最远可以达到1200米左右，但它的传输速率和传输距离成反比。只有在 100Kb/s 以下的传输速度，才能达到最大的通信距离，如果需要传输更远距离可以使用中继。\n  可以在总线上进行联网实现多机通信，总线上允许挂多个收发器，从现有的 RS485芯片来看，有可以挂 32、64、128、256 等不同个设备的驱动器。\n  RS485 的接口非常简单，与 RS232 所使用的 MAX232 是类似的，只需要一个 RS485转换器，就可以直接与单片机的 UART 串口连接起来，并且使用完全相同的异步串行通信协议。但是由于 RS485 是差分通信，因此接收数据和发送数据是不能同时进行的，也就是说它是一种半双工通信。\n  RS485是一个物理接口，简单的说是硬件。 MODBUS是一种国际标准的通讯协议，用于不同厂商之间的设备交换数据（一般是工业用途）；\nModbus简单了解 一般情况下，两台设备通过MODBUS协议传输数据： 最早是用RS232C作为硬件接口，（也就是普通电脑上的串行通讯口（串口））； 也有用RS422的， 也有常用的RS485，这种接口传输距离远，在一般工业现场用的比较多。\nMODBUS协议又分MODBUS RTU，MODBUS ASCII和后来发展的MODBUS TCP三种模式： 其中前两种（MODBUS RTU，MODBUS ASCII）所用的物理硬件接口都是串行（Serial）通讯口（RS232，RS422，RS485）。 而MODBUS TCP则是为了顺应当今世界发展潮流，什么都可以用Ethernet网或Internet来连接，传送数据。所以又MODBUS TCP模式，该模式的硬件接口就是以太网（Ethernet）口了，也就是我们电脑上一般用的网络口了。\n","permalink":"https://newdivide2014.github.io/zh/posts/rs485-rs232/","summary":"RS485和RS232 RS232标准诞生于RS485之前，但RS232有几处不足的地方： 接口的信号电平值较高，达到时机伏，使用不当容易损坏接","title":"RS485和RS232区别"},{"content":"记录一些常用的git命令，忘记的时候来翻翻看。\ngit常用命令   查看当前git用户的配置\n git config --list\r   配置用户信息\n git config --global user.name \u0026quot;xxx\u0026quot;\rgit config --global user.email \u0026quot;xxx@xxx\u0026quot;\r   开始新的项目，初始化新的仓库\n git init    把文件/目录加入暂存区（stage）例子是把当前目录下的所有文件加入到暂存区。\n git add .\r   把文件或目录从暂存区（stage）移除 git rm \u0026ndash;cached ./demo.txt 此刻./demo.txt文件已经从暂存区域删除，但是仍在当前目录下，如果想把该文件也从工作目录中删除，执行\n git rm ./demo.txt\r   git提交忽略某些文件 有些不需要git管理的文件比如.o文件等，可以在跟目录下创建一个名为**.gitignore**，然后在此文件里添加：\n *.o\r   所有空行或#开头的行都会被忽略，以上的设置在每次提交是就会忽略所有的.o文件。\n 修改最后一次提交 有时执行了git commit -m \u0026quot;XXX\u0026quot;后，发现还有一些文件没有添加到暂存区，想撤回刚刚的提交操作，可以使用以下命令修改最后一次的提交信息\n git commit -amend    查看历史\n git log\r# 查看text.c文件的所有改动历史，\r# 每条记录显示在一行\rgit log --pretty=oneline test.c\r   恢复单个文件历史版本\n # 得到text.c的历史版本号\rgit log text.c # 恢复到版本为2e17053b时候的text.c文件\rgit reset 2e17053b\r   查看你曾使用过的git命令 git reflog用来记录你的每一次命令\n  git分支相关   推送远程分支\n git push \u0026lt;远程主机名\u0026gt; \u0026lt;本地分支名\u0026gt;:\u0026lt;远程分支名\u0026gt;\rgit push origin local:remote\r# 示例\rgit push origin master\r# 表示将本地的master分支推送到远程的origin主线的master分支\r# 如果master不存在，则会被新建\r   创建新的分支并切换\n git checkout -b \u0026lt;本地分支名\u0026gt; \u0026lt;远程分支名\u0026gt;\r# 示例：\rgit checkout -b dev origin/master\r# 从远程拉取dev分支到本地,命名为develop，并切换到develop分支\rgit checkout -b develop origin/dev\r   删除分支\n # 删除远程分支\rgit push origin :\u0026lt;远程分支名\u0026gt;\rgit push origin :dev\r# 等同于\rgit push origin --delete \u0026lt;远程分支名\u0026gt;\r# 删除本地分支\rgit branch -D \u0026lt;本地分支\u0026gt;\r   查看各个分支最后一个提交对象的信息\n git branch -v\r   查看与当前分支 合并/未合并 的分支\n # 与当前分支已经合并的分支\rgit branch --merged\r# 与当前分支未合并的分支\rgit branch --no-merged\r   同步远程服务器数据到本地\n git fetch origin\r   对于git pull的理解\n  git pull的过程可以理解为：\n git fetch origin master git merge FETCH_HEAD\r# 完整的格式为：\rgit pull \u0026lt;远程主机名\u0026gt; \u0026lt;远程分支名\u0026gt;:\u0026lt;本地分支名\u0026gt;\r# 如果远程分支是与当前分支合并，则冒号后面的部分可以省略，例如：\rgit pull origin dev\r 分支的合并  把一个分支整合到另一个分支有两种方法：merge和rebase（衍合） merge是把两个分支最新的快照和二者最新的共同祖先进行三方合并，产生一个新的提交对象。 rebase单独写\ngit stash缓存本地仓库工作目录   执行存储时，添加备注，方便查找，只有git stash也可以的，但查找时不方便。\n git stash save \u0026quot;save message\u0026quot;\r   查看stash了哪些存储\n git stash list    显示做了哪些改动，默认show第一个存储,如果要显示其他存贮，后面加stash@{$num}。\n git stash show\r# 显示第二个存储改动\rgit stash show stash@{1}\r   显示存储的改动，默认显示第一个。\ngit stash show -p\rgit stash show stash@{$num} -p\r# 显示第二个存储的改动\rgit stash show stash@{1} -p\r   应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储。\n git stash apply\rgit stash apply stash@{$num}\r# 应用第二个\rgit stash apply stash@{1}\r   命令恢复之前缓存的工作目录，将缓存堆栈中的对应stash删除，并将对应修改应用到当前的工作目录下，默认为第一个stash。\n git stash pop\rgit stash pop stash@{$num}\r# 应用并删除第二个\rgit stash pop stash@{1}\r   丢弃stash@{$num}存储，从列表中删除这个存储\n git stash drop stash@{$num}\r   删除所有缓存的stash\n git stash clear\r   git submodule相关  添加第三方git仓库  1 2 3 4  # path是该子模块存储的目录路径 git submodule add \u0026lt;url\u0026gt; \u0026lt;path\u0026gt; # 例子 git submodule add https://XXXXXXX.git /home/user   添加完成后会在.gitmodules中看到每个submodule的信息。\n将第三方git仓库同步到主线  克隆仓库后，默认子模块的目录下是空的，需要在本地仓库根目录把子模块拉到本地，用到命令如下：\n1 2 3 4 5 6 7 8 9 10  git submodule init git submodule update 或者： git submodule update # 例子 git clone https://XXXXXXX.git git submodule init \u0026amp;\u0026amp; git submodule update #下面这句的效果和上面的命令效果一样 git clone https://XXXXXXX.git --recursive   删除submodule  1  git submodule deinit \u0026lt;submodule-name\u0026gt;    FAQs  执行 git remote add [shortname] [url] 如果提示：remote origin already exists.  则先删除：git remote rm origin 然后再添加：git remote add origin https://XXXX.git\ngit add 操作时，有时会误添加一些不想提交的文件，如何解决？ 误add单个文件  1  git reset HEAD 将file退回到unstage区   误add多个文件，只撤销部分文件\n1  git reset HEAD 将file退回到unstage区   windows git bash 在使用git log时中文乱码  执行命令export LANG=”zh_CN.UTF-8就好了\n","permalink":"https://newdivide2014.github.io/zh/posts/git-cmd/","summary":"记录一些常用的git命令，忘记的时候来翻翻看。 git常用命令 查看当前git用户的配置 git config --list 配置用户信息 git config --global user.name \u0026quot;xxx\u0026quot; git config --global user.email \u0026quot;xxx@xxx\u0026quot; 开始新的项目，初始","title":"git常用命令"},{"content":"2021年计划\n 养只可爱的小猫咪（这个可能实现不了啊，因为放假了怎么办还没想好） 学会网球🎾  ","permalink":"https://newdivide2014.github.io/zh/about/","summary":"2021年计划 养只可爱的小猫咪（这个可能实现不了啊，因为放假了怎么办还没想好） 学会网球🎾","title":""},{"content":"我可能是得了主题病阿！一天换了十几个主题～换的我是真的好累啊。。。 已经被炸干了。。。 好累～🐶\n把主题又换成了papermod。。。\n","permalink":"https://newdivide2014.github.io/zh/posts/change-theme/","summary":"我可能是得了主题病阿！一天换了十几个主题～换的我是真的好累啊。。。 已经被炸干了。。。 好累～🐶 把主题又换成了papermod。。。","title":"沉迷换肤"},{"content":" 显示版本信息  1 2 3 4 5 6 7 8 9 10 11 12 13  display version Huawei Versatile Routing Platform Software VRP (R) software, Version 5.110 (S5700 V200R001C00SPC300) Copyright (C) 2000-2012 HUAWEI TECH CO., LTD Quidway S5700-24TP-SI-AC Routing Switch uptime is 0 week, 0 day, 0 hour, 10 minutes CX22EFGEA 0(Master) : uptime is 0 week, 0 day, 0 hour, 10 minutes 256M bytes DDR Memory 32M bytes FLASH Pcb Version : VER B Basic BOOTROM Version : 162 Compiled at May 31 2012, 10:56:32 CPLD Version : 5 Software Version : VRP (R) Software, Version 5.110 (V200R001C00SPC300)   显示当前配置  1 2 3 4 5 6 7 8 9  \u0026lt;Quidway\u0026gt;display current-configuration configuration user-interface # user-interface con 0 authentication-mode password set authentication password cipher %$%$1V2:B|!|f%HSgrWXjj*W,e\\Sbo{|Km6oOGipQwSRK|VI#kb]%$%$ user-interface vty 0 4 user-interface vty 16 20 # return   显示ssh服务状态  1 2 3 4 5 6 7 8 9  \u0026lt;Quidway\u0026gt;display ssh server status SSH version :1.99 SSH connection timeout :60 seconds SSH server key generating interval :0 hours SSH authentication retries :3 times SFTP server :Disable Stelnet server :Disable Scp server :Disable   显示snmp状态  1 2 3  \u0026lt;Quidway\u0026gt;display snmp-agent statistics Error: SNMP agent is not enabled.   显示telnet服务状态  1 2 3 4  \u0026lt;Quidway\u0026gt;display telnet server status TELNET IPv4 server :Enable TELNET IPv6 server :Enable TELNET server port :23   显示设备状态  1 2 3 4 5  \u0026lt;Quidway\u0026gt;display device S5700-24TP-SI-AC\u0026#39;s Device status: Slot Sub Type Online Power Register Status Role - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 0 - 5724TP Present PowerOn Registered Normal Master   显示环境(好像显示的是温度)  1 2 3 4 5 6  \u0026lt;Quidway\u0026gt;display environment Environment information: Temperature information: SlotID CurrentTemperature LowLimit HighLimit (deg c ) (deg c) (deg c ) 0 41 0 92   显示ftp、http服务状态  1 2 3 4 5 6 7 8 9 10 11 12  \u0026lt;Quidway\u0026gt;display ftp-server Info: The FTP server is already disabled. \u0026lt;Quidway\u0026gt;display http server HTTP Server Status : disabled HTTP Server Port : 80(80) HTTP Timeout Interval : 20 Current Online Users : 0 Maximum Users Allowed : 5 HTTP Secure-server Status : disabled HTTP Secure-server Port : 443(443) HTTP SSL Policy :   显示icmp状态  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  \u0026lt;Quidway\u0026gt;display icmp statistics Input: bad formats 0 bad checksum 0 echo 0 destination unreachable 0 source quench 0 redirects 0 echo reply 0 parameter problem 0 timestamp 0 information request 0 mask requests 0 mask replies 0 time exceeded 0 Mping request 0 Mping reply 0 Output:echo 0 destination unreachable 0 source quench 0 redirects 0 echo reply 0 parameter problem 0 timestamp 0 information reply 0 mask requests 0 mask replies 0 time exceeded 0 Mping request 0 Mping reply 0   显示本地用户  1 2 3 4 5 6 7  \u0026lt;Quidway\u0026gt;display local-user ---------------------------------------------------------------------------- User-name State AuthMask AdminLevel ---------------------------------------------------------------------------- admin A H - ---------------------------------------------------------------------------- Total 1 user(s)   显示ntp服务状态  1 2 3 4 5 6 7 8 9 10 11 12  \u0026lt;Quidway\u0026gt;display ntp-service status clock status: unsynchronized clock stratum: 16 reference clock ID: none nominal frequency: 60.0002 Hz actual frequency: 60.0002 Hz clock precision: 2^17 clock offset: 0.0000 ms root delay: 0.00 ms root dispersion: 0.00 ms peer dispersion: 0.00 ms reference time: 00:00:00.000 UTC Jan 1 1900(00000000.00000000)   显示radius服务授权配置和显示radius服务配置  1 2 3 4 5 6  \u0026lt;Quidway\u0026gt;display radius-server authorization configuration 0 Radius authorization server(s) in total \u0026lt;Quidway\u0026gt;display radius-server configuration Total of radius template :0   显示ssl策略  1 2  \u0026lt;Quidway\u0026gt;display ssl policy Error: No policy exists.   显示tcp状态  1 2 3 4  \u0026lt;Quidway\u0026gt;display tcp status TCPCB Tid/Soid Local Add:port Foreign Add:port VPNID State 0d4315d0 102/1 0.0.0.0:23 0.0.0.0:0 -1 Listening   ","permalink":"https://newdivide2014.github.io/zh/posts/huawei-switch/","summary":"显示版本信息 1 2 3 4 5 6 7 8 9 10 11 12 13 display version Huawei Versatile Routing Platform Software VRP (R) software, Version 5.110 (S5700 V200R001C00SPC300) Copyright (C) 2000-2012 HUAWEI TECH CO., LTD Quidway S5700-24TP-SI-AC Routing Switch uptime is 0 week, 0 day, 0 hour, 10 minutes CX22EFGEA 0(Master) : uptime is 0 week, 0 day, 0 hour, 10 minutes 256M bytes DDR","title":"华为交换机一些命令及回显信息"}]